{"ast":null,"code":"var _jsxFileName = \"/Users/anbui/express_react_lab/fronten/src/pages/About.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction About(props) {\n  _s();\n  // create state to hold about data\n  const [about, setAbout] = useState(null);\n\n  // create function to make api call\n  //   const getAboutData = async () => {\n  //     // make api call and get response\n  //     const response = await fetch(props.URL + \"about\");\n  //     // turn response into javascript object\n  //     const data = await response.json();\n  //     // set the about state to the data\n  //     setAbout(data);\n  //   };\n\n  // make an initial call for the data inside a useEffect, so it only happens once on component load\n  useEffect(() => {\n    async function getAboutData() {\n      // make api call and get response\n      const response = await fetch(props.URL + \"about\");\n      // turn response into javascript object\n      const data = await response.json();\n      // set the about state to the data\n      setAbout(data);\n    }\n    getAboutData();\n  }, []);\n\n  // define a function that will return the JSX needed once we get the data\n  const loaded = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: about.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: about.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: about.bio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n\n  // if data arrives return the result of loaded, if not, an h1 that says loading\n  return about ? loaded() : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 29\n  }, this);\n}\n_s(About, \"ZQewCrXo0ZaqbbuJPEFRGd1ogYs=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["useState","useEffect","About","props","about","setAbout","getAboutData","response","fetch","URL","data","json","loaded","name","email","bio"],"sources":["/Users/anbui/express_react_lab/fronten/src/pages/About.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction About(props) {\n  // create state to hold about data\n  const [about, setAbout] = useState(null);\n\n  // create function to make api call\n//   const getAboutData = async () => {\n//     // make api call and get response\n//     const response = await fetch(props.URL + \"about\");\n//     // turn response into javascript object\n//     const data = await response.json();\n//     // set the about state to the data\n//     setAbout(data);\n//   };\n\n  // make an initial call for the data inside a useEffect, so it only happens once on component load\n  useEffect( () => {\n    async function getAboutData() {\n   // make api call and get response\n   const response = await fetch(props.URL + \"about\");\n   // turn response into javascript object\n   const data = await response.json();\n   // set the about state to the data\n   setAbout(data);\n    }\n     getAboutData();\n    },[]\n   )\n\n  // define a function that will return the JSX needed once we get the data\n  const loaded = () => (\n    <div>\n      <h2>{about.name}</h2>\n      <h3>{about.email}</h3>\n      <p>{about.bio}</p>\n    </div>\n  );\n\n  // if data arrives return the result of loaded, if not, an h1 that says loading\n  return about ? loaded() : <h1>Loading...</h1>;\n}\n\nexport default About;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAE5C,SAASC,KAAK,CAACC,KAAK,EAAE;EAAA;EACpB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE;EACAC,SAAS,CAAE,MAAM;IACf,eAAeK,YAAY,GAAG;MAC/B;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,KAAK,CAACM,GAAG,GAAG,OAAO,CAAC;MACjD;MACA,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;MAClC;MACAN,QAAQ,CAACK,IAAI,CAAC;IACb;IACCJ,YAAY,EAAE;EACf,CAAC,EAAC,EAAE,CACJ;;EAEF;EACA,MAAMM,MAAM,GAAG,mBACb;IAAA,wBACE;MAAA,UAAKR,KAAK,CAACS;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,eACrB;MAAA,UAAKT,KAAK,CAACU;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAA,UAAIV,KAAK,CAACW;IAAG;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAErB;;EAED;EACA,OAAOX,KAAK,GAAGQ,MAAM,EAAE,gBAAG;IAAA,UAAI;EAAU;IAAA;IAAA;IAAA;EAAA,QAAK;AAC/C;AAAC,GAvCQV,KAAK;AAAA,KAALA,KAAK;AAyCd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}