{"ast":null,"code":"var _jsxFileName = \"/Users/anbui/express_react_lab/fronten/src/pages/Projects.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects(props) {\n  _s();\n  // create state to hold projects\n  const [projects, setProjects] = useState(null);\n\n  //create function to make api call\n  const getProjectsData = async () => {\n    //make api call and get response\n    const response = await fetch(props.URL + \"projects\");\n    // turn response into javascript object\n    const data = await response.json();\n    // set the projects state to the data\n    setProjects(data);\n  };\n\n  // make an initial call for the data inside a useEffect, so it only happens once on component load\n  useEffect(() => {\n    getProjectsData();\n  }, []);\n\n  // define a function that will return the JSX needed once we get the data\n  const loaded = () => {\n    return projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: project.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: project.git,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Github\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: project.live,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"live site\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this));\n  };\n  return projects ? loaded() : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 32\n  }, this);\n}\n_s(Projects, \"KL5sgk8pm0HzOCuFqYY4fikIxrI=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["useState","useEffect","Projects","props","projects","setProjects","getProjectsData","response","fetch","URL","data","json","loaded","map","project","name","image","git","live"],"sources":["/Users/anbui/express_react_lab/fronten/src/pages/Projects.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction Projects(props) {\n  // create state to hold projects\n  const [projects, setProjects] = useState(null);\n\n  //create function to make api call\n  const getProjectsData = async () => {\n    //make api call and get response\n    const response = await fetch(props.URL + \"projects\");\n    // turn response into javascript object\n    const data = await response.json();\n    // set the projects state to the data\n    setProjects(data);\n  };\n\n  // make an initial call for the data inside a useEffect, so it only happens once on component load\n  useEffect(() => {getProjectsData()}, []);\n\n  // define a function that will return the JSX needed once we get the data\n  const loaded = () => {\n    return projects.map((project) => (\n      <div>\n        <h1>{project.name}</h1>\n        <img src={project.image} />\n        <a href={project.git}>\n          <button>Github</button>\n        </a>\n        <a href={project.live}>\n          <button>live site</button>\n        </a>\n      </div>\n    ));\n  };\n\n  return projects ? loaded() : <h1>Loading...</h1>;\n}\n\nexport default Projects;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAE5C,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACvB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,MAAMM,eAAe,GAAG,YAAY;IAClC;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,KAAK,CAACM,GAAG,GAAG,UAAU,CAAC;IACpD;IACA,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;IAClC;IACAN,WAAW,CAACK,IAAI,CAAC;EACnB,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IAACK,eAAe,EAAE;EAAA,CAAC,EAAE,EAAE,CAAC;;EAExC;EACA,MAAMM,MAAM,GAAG,MAAM;IACnB,OAAOR,QAAQ,CAACS,GAAG,CAAEC,OAAO,iBAC1B;MAAA,wBACE;QAAA,UAAKA,OAAO,CAACC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM,eACvB;QAAK,GAAG,EAAED,OAAO,CAACE;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3B;QAAG,IAAI,EAAEF,OAAO,CAACG,GAAI;QAAA,uBACnB;UAAA,UAAQ;QAAM;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACrB,eACJ;QAAG,IAAI,EAAEH,OAAO,CAACI,IAAK;QAAA,uBACpB;UAAA,UAAQ;QAAS;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QACxB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEP,CAAC;EACJ,CAAC;EAED,OAAOd,QAAQ,GAAGQ,MAAM,EAAE,gBAAG;IAAA,UAAI;EAAU;IAAA;IAAA;IAAA;EAAA,QAAK;AAClD;AAAC,GAlCQV,QAAQ;AAAA,KAARA,QAAQ;AAoCjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}